-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema INCUBATOR
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema INCUBATOR
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `INCUBATOR` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
SHOW WARNINGS;
USE `INCUBATOR` ;

-- -----------------------------------------------------
-- Table `INCUBATOR`.`PERSON`
-- -----------------------------------------------------
DROP TABLE `INCUBATOR`.`PERSON`;
CREATE TABLE IF NOT EXISTS `INCUBATOR`.`PERSON` (
  `SSN` VARCHAR(45) NULL COMMENT '',
  `PERSON_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `NAME` VARCHAR(45) NULL COMMENT '',
  `TYPE` VARCHAR(45) NULL COMMENT '',
  `AGE` INT NULL COMMENT '',
  `ADDRESS` VARCHAR(45) NULL COMMENT '',
  `CONTACT` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`PERSON_ID`)  COMMENT '')
ENGINE = InnoDB;
SELECT * FROM `INCUBATOR`.`PERSON`;
SHOW WARNINGS;

ALTER TABLE `INCUBATOR`.`PERSON` DROP COLUMN TYPE;
-- -----------------------------------------------------
-- Table `INCUBATOR`.`PATIENT`
-- -----------------------------------------------------
DROP TABLE `INCUBATOR`.`PATIENT`;
CREATE TABLE IF NOT EXISTS `INCUBATOR`.`PATIENT` (
  `PATIENT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `WARD_NO` VARCHAR(45) NULL COMMENT '',
  `PERSON_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`PATIENT_ID`, `PERSON_ID`)  COMMENT '',
  INDEX `PERSON_ID_idx` (`PERSON_ID` ASC)  COMMENT '',
  CONSTRAINT `PERSON_IDPAT`
    FOREIGN KEY (`PERSON_ID`)
    REFERENCES `INCUBATOR`.`PERSON` (`PERSON_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
SELECT * FROM `INCUBATOR`.`PATIENT`;
SHOW WARNINGS;
ALTER TABLE `INCUBATOR`.`PATIENT` DROP PRIMARY KEY;
-- -----------------------------------------------------
-- Table `INCUBATOR`.`EMPLOYEE`
-- -----------------------------------------------------
DROP TABLE `INCUBATOR`.`EMPLOYEE`;
CREATE TABLE IF NOT EXISTS `INCUBATOR`.`EMPLOYEE` (
  `EMPLOYEE_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `EMPLOYEE_TYPE` VARCHAR(45) NULL COMMENT '',
  `PERSON_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`EMPLOYEE_ID`)  COMMENT '',
  INDEX `PERSON_IDEMP_idx` (`PERSON_ID` ASC)  COMMENT '',
  CONSTRAINT `PERSON_IDEMP`
    FOREIGN KEY (`PERSON_ID`)
    REFERENCES `INCUBATOR`.`PERSON` (`PERSON_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
SELECT * FROM `INCUBATOR`.`EMPLOYEE`;
SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `INCUBATOR`.`INCUBATOR`
-- -----------------------------------------------------
DROP TABLE `INCUBATOR`.`INCUBATOR`;
CREATE TABLE IF NOT EXISTS `INCUBATOR`.`INCUBATOR` (
  `INCUBATOR_NUMBER` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `BABY_GENDER` VARCHAR(45) NULL COMMENT '',
  `WEIGHT` DECIMAL(8,2) NULL COMMENT '',
  `SKIN_COLOUR` VARCHAR(45) NULL COMMENT '',
  `PATIENT_ID` INT NOT NULL COMMENT '',
  `EMPLOYEE_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`INCUBATOR_NUMBER`, `PATIENT_ID`, `EMPLOYEE_ID`)  COMMENT '',
  INDEX `PATIENT_IDINC_idx` (`PATIENT_ID` ASC)  COMMENT '',
  INDEX `EMPLOYEE_ID_idx` (`EMPLOYEE_ID` ASC)  COMMENT '',
  CONSTRAINT `PATIENT_IDINC`
    FOREIGN KEY (`PATIENT_ID`)
    REFERENCES `INCUBATOR`.`PATIENT` (`PATIENT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `EMPLOYEE_ID`
    FOREIGN KEY (`EMPLOYEE_ID`)
    REFERENCES `INCUBATOR`.`EMPLOYEE` (`EMPLOYEE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
SELECT * FROM `INCUBATOR`.`INCUBATOR`;
SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `INCUBATOR`.`DATA_COLLECTED`
-- -----------------------------------------------------
DROP TABLE `INCUBATOR`.`DATA_COLLECTED`;
CREATE TABLE IF NOT EXISTS `INCUBATOR`.`DATA_COLLECTED` (
  `RAW_DATA_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `WEIGHT` DECIMAL(8,2) NULL COMMENT '',
  `BABY_TEMP` DECIMAL(8,2) NULL COMMENT '',
  `OXYGEN` DECIMAL(8,2) NULL COMMENT '',
  `HUMIDITY` DECIMAL(8,2) NULL COMMENT '',
  `TEMPERATURE` DECIMAL(8,2) NULL COMMENT '',
  `TIME` TIMESTAMP NULL COMMENT '',
  `STATUS` VARCHAR(45) NULL COMMENT '',
  `INCUBATOR_NO` INT NULL COMMENT '',
  `PERSON_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`RAW_DATA_ID`)  COMMENT '',
  INDEX `INCUBATOR_NODC_idx` (`INCUBATOR_NO` ASC)  COMMENT '',
  CONSTRAINT `INCUBATOR_NODC`
    FOREIGN KEY (`INCUBATOR_NO`)
    REFERENCES `INCUBATOR`.`INCUBATOR` (`INCUBATOR_NUMBER`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION, 
    CONSTRAINT `PERSON_IDDC`
    FOREIGN KEY (`PERSON_ID`)
    REFERENCES `INCUBATOR`.`PERSON` (`PERSON_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
SELECT * FROM `INCUBATOR`.`DATA_COLLECTED`;
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` DROP COLUMN LIGHT;
SHOW WARNINGS;
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` ADD COLUMN PERSON_ID INTEGER;
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` ADD FOREIGN KEY (PERSON_ID) REFERENCES `INCUBATOR`.`PERSON` (PERSON_ID);
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` ADD COLUMN PATIENT_ID INTEGER;
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` ADD FOREIGN KEY (PATIENT_ID) REFERENCES `INCUBATOR`.`PERSON` (PERSON_ID);
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` ADD COLUMN PA_ID INTEGER;
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` ADD FOREIGN KEY (PA_ID) REFERENCES `INCUBATOR`.`PERSON` (PERSON_ID);
ALTER TABLE `INCUBATOR`.`DATA_COLLECTED` MODIFY PERSON_ID INT NOT NULL;
-- Table `INCUBATOR`.`ALERT`
-- -----------------------------------------------------
DROP TABLE `INCUBATOR`.`ALERT`;
CREATE TABLE IF NOT EXISTS `INCUBATOR`.`ALERT` (
  `ALERT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `INCUBATOR_NUMBER` INT NULL COMMENT '',
  `ALERT_MESSAGE` VARCHAR(45) NULL COMMENT '',
  `EMPLOYEE_ID` INT NULL COMMENT '',
  `OPTIMUM_OXYGEN` DECIMAL(8,2) NULL COMMENT '',
  `OPTIMUM_HUMIDITY` DECIMAL(8,2) NULL COMMENT '',
  `OPTIMUM_TEMPERATURE` DECIMAL(8,2) NULL COMMENT '',
  `OPTIMUM_LIGHT` DECIMAL(8,2) NULL COMMENT '',
  `RAW_DATA_ID` INT NULL COMMENT '',
  `PERSON_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ALERT_ID`)  COMMENT '',
  INDEX `INC_NUM_idx` (`INCUBATOR_NUMBER` ASC)  COMMENT '',
  INDEX `EMP_ID_idx` (`EMPLOYEE_ID` ASC)  COMMENT '',
  INDEX `RAW_DATA_idx` (`RAW_DATA_ID` ASC)  COMMENT '',
  CONSTRAINT `INC_NUM`
    FOREIGN KEY (`INCUBATOR_NUMBER`)
    REFERENCES `INCUBATOR`.`INCUBATOR` (`INCUBATOR_NUMBER`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `EMP_ID`
    FOREIGN KEY (`EMPLOYEE_ID`)
    REFERENCES `INCUBATOR`.`EMPLOYEE` (`EMPLOYEE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RAW_DATA`
    FOREIGN KEY (`RAW_DATA_ID`)
    REFERENCES `INCUBATOR`.`DATA_COLLECTED` (`RAW_DATA_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `PERSON_ALERT`
    FOREIGN KEY (`PERSON_ID`)
    REFERENCES `INCUBATOR`.`PERSON` (`PERSON_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
ALTER TABLE `INCUBATOR`.`ALERT` DROP COLUMN OPTIMUM_LIGHT;
SHOW WARNINGS;
SELECT * FROM `INCUBATOR`.`ALERT`;
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

drop view doc_view;
Create view doc_view as 
(select distinct per.NAME, d.TIME, d.PLAQUE_SIZE, d.PLAQUE_OCCURENCE, d.BP, 
p.HEART_BEAT
 from `MEMS_Cardio`.`PATIENT_SIDE_APP` p inner join 
`MEMS_Cardio`.`DEDUCED_VITAL_DATA` d on p.`P_ID` = d.`VITAL_SIGN_ID` inner join 
`MEMS_Cardio`.`PERSON` per on p.person_id = per.person_id where per.person_id in 
(select person_id from `MEMS_Cardio`.`PATIENT`));

SELECT *FROM doc_view;

drop view pat_view;
Create view pat_view as 
(select distinct d.INCUBATOR_NO, d.TIME, d.STATUS, per.NAME from `INCUBATOR`.`DATA_COLLECTED` d inner join 
`INCUBATOR`.`PERSON` per on d.PERSON_ID = per.PERSON_ID where per.PERSON_ID in (select PERSON_ID from 
`INCUBATOR`.`EMPLOYEE`));

SELECT *FROM pat_view;

drop view doc_view;
Create view doc_view as 
(select distinct d.INCUBATOR_NO, d.TIME, d.weight, d.baby_temp, per.NAME from 
`INCUBATOR`.`DATA_COLLECTED` d inner join `INCUBATOR`.`PERSON` per on d.PATIENT_ID = per.PERSON_ID where per.PERSON_ID in  
(select PERSON_ID from `INCUBATOR`.`PATIENT`));

SELECT *FROM doc_view;

drop view physician_assist_view;
Create view physician_assist_view as 
(select distinct d.INCUBATOR_NO, d.TIME, d.temperature, d.oxygen, d.humidity, per.NAME from 
`INCUBATOR`.`DATA_COLLECTED` d inner join `INCUBATOR`.`PERSON` per on d.PA_ID = per.PERSON_ID where per.PERSON_ID in  
(select PERSON_ID from `INCUBATOR`.`EMPLOYEE`));

SELECT *FROM physician_assist_view;

START TRANSACTION;
DELIMITER $$
CREATE
	TRIGGER `Raw_data_to_Alert` AFTER INSERT 
	ON `INCUBATOR`.`DATA_COLLECTED` 
	FOR EACH ROW 
BEGIN	
		IF NEW.`OXYGEN` > 80 AND NEW.`OXYGEN` < 37 THEN
			SET @`OPTIMUM_OXYGEN`=50;
		ELSE
            SET @`OPTIMUM_OXYGEN`=0;
		END IF;
		IF NEW.`HUMIDITY` > 75 AND NEW.`HUMIDITY` < 40 THEN
			SET @`OPTIMUM_HUMIDITY`=55;
		ELSE
            SET @`OPTIMUM_HUMIDITY`=0;
		END IF;
        IF NEW.`TEMPERATURE` > 92.00 AND NEW.`TEMPERATURE` < 88.00 THEN
			SET @`OPTIMUM_TEMPERATURE`=90.00;
		ELSE
            SET @`OPTIMUM_TEMPERATURE`=0.00;
		END IF;	
    
		INSERT INTO `INCUBATOR`.`ALERT` (ALERT_ID, INCUBATOR_NUMBER, ALERT_MESSAGE, EMPLOYEE_ID,OPTIMUM_OXYGEN,
		OPTIMUM_HUMIDITY, OPTIMUM_TEMPERATURE, RAW_DATA_ID, PERSON_ID) VALUES (ALERT_ID, INCUBATOR_NUMBER, 
        ALERT_MESSAGE, EMPLOYEE_ID, @`OPTIMUM_OXYGEN`,@`OPTIMUM_HUMIDITY`,@`OPTIMUM_TEMPERATURE`,RAW_DATA_ID,
        PERSON_ID);
	END$$
DELIMITER ;
COMMIT;

START TRANSACTION;
DELIMITER $$
CREATE
	TRIGGER `DeleteTrig` BEFORE DELETE
	ON `INCUBATOR`.`INCUBATOR` 
	FOR EACH ROW 
BEGIN	
		DELETE FROM `INCUBATOR`.`DATA_COLLECTED` WHERE `WEIGHT`>2500; 
	END$$
DELIMITER ;
COMMIT;

START TRANSACTION;
DELIMITER $$
CREATE
	TRIGGER `Alert_to_Rawdata` BEFORE UPDATE  
	ON `INCUBATOR`.`DATA_COLLECTED` 
	FOR EACH ROW 
BEGIN	
		IF NEW.`OXYGEN` > 80.00 AND NEW.`OXYGEN` < 37.00 THEN
			SET @`OXYGEN`=0.00;
		END IF;
		IF NEW.`HUMIDITY` > 75.00 AND NEW.`HUMIDITY` < 40.00 THEN
			SET @`HUMIDITY`=0.00;
		END IF;
        IF NEW.`TEMPERATURE` > 92.00 AND NEW.`TEMPERATURE` < 88.00 THEN
			SET @`TEMPERATURE`=0.00;
		END IF;	
    
		INSERT INTO `INCUBATOR`.`DATA_COLLECTED` (RAW_DATA_ID, WEIGHT, BABY_TEMP, OXYGEN, HUMIDITY, 
        TEMPERATURE, TIME, STATUS, INCUBATOR_NO, PERSON_ID, PATIENT_ID, PA_ID) VALUES (RAW_DATA_ID, WEIGHT, BABY_TEMP, 
        @`OXYGEN`,@`HUMIDITY`,@`TEMPERATURE`, NOW(), STATUS, INCUBATOR_NO, PERSON_ID, PATIENT_ID, PA_ID);
	END$$
DELIMITER ;
COMMIT;

SELECT *FROM `INCUBATOR`.`DATA_COLLECTED` WHERE `OXYGEN`>80;
SELECT *FROM `INCUBATOR`.`DATA_COLLECTED` ORDER BY `INCUBATOR_NO`;
SELECT *FROM `INCUBATOR`.`ALERT` GROUP BY `OPTIMUM_TEMPERATURE`;
SELECT *FROM `INCUBATOR`.`DATA_COLLECTED` HAVING `HUMIDITY`>75;

START TRANSACTION;
delimiter |

CREATE EVENT Backup_Table1
    ON SCHEDULE
      EVERY 30 day
    COMMENT 'Takes backup every day'
    DO BEGIN
    SET @sql_text = 
   CONCAT (
   "SELECT * FROM `INCUBATOR` INTO OUTFILE 'C:\Users\kpdar\Desktop\backup"
   , DATE_FORMAT( NOW(), '%Y%m%d')
   , "backup.csv'"
);
PREPARE s1 FROM @sql_text;
 EXECUTE s1;    
 END |
 
 DROP PREPARE s1;
delimiter ;
COMMIT;